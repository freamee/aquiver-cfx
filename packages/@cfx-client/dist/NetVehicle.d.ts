import { NetEntity } from './NetEntity';
export declare class NetVehicle extends NetEntity {
    private _scriptID;
    static getByScriptId(id: number): NetVehicle;
    static getByNetId(id: number): NetVehicle;
    protected _stateBag: StateBagInterface;
    constructor(_scriptID: number);
    get scriptID(): number;
    get trailer(): NetVehicle;
    get steeringAngle(): number;
    set steeringAngle(angle: number);
    get engineTemperature(): number;
    set engineTemperature(temperature: number);
    get alarmState(): boolean;
    set alarmState(state: boolean);
    get isVehicleRadioOn(): boolean;
    get isRadioEnabled(): boolean;
    set isRadioEnabled(state: boolean);
    get lockState(): number;
    set lockState(lockStatus: number);
    get classType(): number;
    get handbrakeOn(): boolean;
    set handbrakeOn(state: boolean);
    get engineOn(): boolean;
    set engineOn(state: boolean);
    isSeatFree(seatIndex: number): boolean;
    set indicatorLeft(state: boolean);
    get indicatorLeft(): boolean;
    set indicatorRight(state: boolean);
    get indicatorRight(): boolean;
    get currentGear(): number;
    set currentGear(gear: number);
    get rpm(): number;
    set rpm(count: number);
    get speed(): number;
    get speedVector(): number[];
    get seatCount(): number;
    get bodyHealth(): number;
    set bodyHealth(hp: number);
    get engineHealth(): number;
    set engineHealth(hp: number);
    get petrolTankHealth(): number;
    set petrolTankHealth(hp: number);
    get numberPlate(): string;
    set numberPlate(text: string);
    get dirtLevel(): number;
    set dirtLevel(level: number);
    set primaryModColor(modColorIndex: number);
    set secondaryModColor(modColorIndex: number);
    get dashboardColor(): number;
    set dashboardColor(colorIndex: number);
    get tyreSmokeEnabled(): boolean;
    set tyreSmokeEnabled(state: boolean);
    get interiorColor(): number;
    set interiorColor(colorIndex: number);
    get hasModKit(): boolean;
    get xenonEnabled(): boolean;
    set xenonEnabled(state: boolean);
    installModKit(): void;
    setMod(modType: number, modIndex: number): void;
    getMod(modType: number): number;
}
